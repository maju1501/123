;Programa Soma de dois números de 1 digito
;Introdução Assembly
;Author: Maria Julia, FEAP
;version: Maria Julia, curso Engenharia da Computação 
SYS_EXIT      equ 1 ;informa uma interrupção de entrada/saída
SYS_READ      equ 3 
SYS_WRITE     equ 4
STDIN         equ 0
STDOUT        equ 1

section .data           ;seção de dados iniciada
                        ;chamada (mensagem) para informar 1º numero
    msg1 db 'Insira um dígito', 0xa, 0xd
    len1 equ $ -msg1
                        ;chamada (mensagem) para informar 2º numero
    msg2 db 'Insira o segundo dígito', 0xa, 0xd
    len2 equ $ -msg2
                        ;chamada (mensagem) para informar resultado (soma)
    msg3 db 'A soma é: '
    len3 equ $ -msg3
    
section .bss            ;seção de declaração de variaveis a serem processadas
    num1 resb 2
    num2 resb 2
    res  resb STDOUT
    
section .text           ;seção de execução
    global _start

_start:                 ;iniciando programação

                        ;imprime a string msg1
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg1
    mov edx, len1
    int 0x80
                        ;lê o primeiro numero
    mov eax, SYS_READ
    mov ebx, STDIN
    mov ecx, num1
    mov edx, 2
    int 0x80
                        ;imprime a string msg2
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg2
    mov edx, len2
    int 0x80
                        ;lê o segundo número 
    mov eax, SYS_READ
    mov ebx, STDIN
    mov ecx, num2
    mov edx, 2
    int 0x80
    
    ;move o primeiro número para o resgitro eax e subtrat o ASCII o para converter pro DEC
    mov eax, [num1]
    sub eax,'0'
    
    ;move o segundo número para o registro ebx e subtrato ASCII o para converter pro DEC
    mov ebx,[num2]
    sub ebx,'0'
    
    ;soma eax ebx
    add eax, ebx
    
    ;adiciona '0' para converter de decimal para ASCII
    add eax,'0'
    
    ;armazena a soma na localização de mémoria 'res'
    mov [res], eax
    
    ;imprime a string msg3
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg3
    mov edx, len3
    int 0x80
    
    ;imprime o resultado 
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, res 
    mov edx, 2
    int 0x80
